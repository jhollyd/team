from django.core.management.base import BaseCommand
from scheduler.models import Employee
from scheduler.scheduleEngine import ScheduleEngine  
import random

class Command(BaseCommand):
    help = 'Run the scheduling engine 10,000 times and keep the top 3 results'
    def compute_emp_availability_counts(self,employees):
        """
        Takes a list of Employee objects and returns a list of 7 strings
        representing the number of employees available at each 15-min block.
        """
        if not employees:
            return [""] * 7
            print("You did not provide a list with any employees")

        # Assume all availabilities are the same length
        num_days = 7
        bits_per_day = len(employees[0].availability[0])
        
        # Initialize the result as 7 lists of zeroes
        counts = [[0] * bits_per_day for _ in range(num_days)]

        for emp in employees:
            for day_idx in range(num_days):
                for bit_idx, bit in enumerate(emp.availability[day_idx]):
                    if bit == '0':  # 0 = available
                        counts[day_idx][bit_idx] += 1

    
        result = [''.join(str(x) for x in day) for day in counts]
        return result

    def handle(self, *args, **kwargs):
        dummy_employees = []
        for i in range(7):
            emp = Employee(
                employee_id=f"EMP{i+1}",
                availability=[Employee().generate_block_availability() for _ in range(7)],
                params={"max_hours": (40 if random.randint(0,1) < 0.8 else 20), "preferential": False}
            )
            dummy_employees.append(emp)

            print(emp.employee_id + ": ")
            print(emp.availability)

        print("-" * 40)
        print("Value at each index represents the number of students AVAILABLE to work during the shift corresponding to that index:")
        output = self.compute_emp_availability_counts(dummy_employees)
        for i, row in enumerate(output):
            print(f"Day {i + 1}: {row}")
        print("-" * 40)

        print("-" * 40)
        

        top_schedules = []  # List of (cost, schedule) tuples

        employeeHourLimitViolationWarning = False

        for iteration in range(1, 50000):
            sE = ScheduleEngine(employees=dummy_employees)
            empIdToSched = sE.schedule()

            employeeHourLimitViolationWarning = employeeHourLimitViolationWarning or (sE.total_emp_hour_limit_violations > 0)

            unfilled = 0
            overstaffed = 0

            for i in range(28, 84):  # Only slots in (28, 83) inclusive - 0 represents 12:00 so 28 would be 7:00, 83 would be 21:00 or 9:00 pm
                for day in range(7):  # Each day
                    count = sum(1 for sched in empIdToSched.values() if sched[day][i] == '1')
                    if count == 0:
                        unfilled += 1
                    elif count > 2:
                        overstaffed += 1

            overstaffed_factor = overstaffed * 10
            cost = unfilled

            top_schedules.append((cost, empIdToSched, sE))
            top_schedules = sorted(top_schedules, key=lambda x: x[0])[:10] ## gather top 10 by cost which is # of unfilled shifts
            ## strategy = gather top 10 by unfilled shifts, sort these by #of overstaffed - to be implemented

            if iteration % 10000 == 0:
                print(f"We are on iteration: {iteration}: cost = {cost}, unfilled = {unfilled}, overstaffed = {overstaffed}...")

        print("\nâœ… Top 3 Schedules by Cost:")
        for rank, (cost, _, _) in enumerate(top_schedules, start=1):
            print(f"{rank}. Cost = {cost}")

        # Use best schedule for breakdown
        best_schedule = top_schedules[0][1]
        best_schedule_associated_engine = top_schedules[0][2]

        # Analyze best schedule coverage
        coverage_counts = {
            0: 0,
            1: 0,
            2: 0,
            '2+': 0
        }
        list_uncovered_shifts = [] ## To store data about which shifts are uncovered
        for i in range(28, 84):
            for day in range(7):
                count = sum(1 for sched in best_schedule.values() if sched[day][i] == '1')
                if count == 0:
                    coverage_counts[0] += 1
                    list_uncovered_shifts.append(("day" + str(day), i)) ## Store data about all the shifts that are uncovered
                elif count == 1:
                    coverage_counts[1] += 1
                elif count == 2:
                    coverage_counts[2] += 1
                else:
                    coverage_counts['2+'] += 1

        print("\n--- Shift Coverage Breakdown (Indices 28â€“83) ---")
        print(f"Shifts with 0 people scheduled  : {coverage_counts[0]}")
        print(f"Shifts with 1 person scheduled  : {coverage_counts[1]}")
        print(f"Shifts with exactly 2 scheduled : {coverage_counts[2]}")
        print(f"Shifts with 3+ people scheduled : {coverage_counts['2+']}")

        for emp_id, sched in best_schedule.items():
            print(f"{emp_id}:")
            for day, bits in zip(["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"], sched):
                print(f"  {day}: {bits}")
            print("-" * 50)

        total_scheduled_shifts = 0
        for sched in best_schedule.values():
            for day_bits in sched:
                total_scheduled_shifts += day_bits.count('1')

        print(f"\nðŸ”¢ Total number of scheduled shifts (in hours) across all employees and days: {total_scheduled_shifts/4}")
        
        print("-" * 40)
        print("Information about each employee's max_hours vs the hours they are scheduled to work")
        for emp in dummy_employees:
            emp_id = emp.employee_id
            max_hours = emp.params.get('max_hours')
            scheduled_hours =  best_schedule_associated_engine.scheduledHoursPerEmployee.get(emp_id, 0)
            print(f"{emp_id}: max_hours = {max_hours}, scheduled_hours = {scheduled_hours}")
        print("-" * 40)

        print(f"The following shifts are uncovered: {list_uncovered_shifts}")
        
        
        
        if(employeeHourLimitViolationWarning):
            print("SCHEDULES ARE BEING PRODUCED THAT VIOLATE MAX EMPLOYEE HOUR CONSTRAINTS, SHOULD NOT OCCUR! PLEASE CHECK IMPLEMENTATION!")


"""
The following artifact is authored by Julian Biju, and explains how to test the schedulingAlgorithm

Currently to test the algorithm (follow these instructions)

1) Pull from the following branch: https://github.com/jhollyd/team/blob/sprint2Algo

2) Navigate to team\SCHEDULING\backend\source

3) Run the command python manage.py run_schedule

In line 51 in the following file: https://github.com/jhollyd/team/blob/sprint2Algo/SCHEDULING/backend/source/scheduler/management/commands/run_schedule.py

The number of iterations that the scheduling algorithm undergoes can be altered by changing the number of iterations to any number of iterations you wish to test.

On several systems, we tested 25,000 iterations, 50,000 iterations, 75,000 iterations and 100,000 iterations and we found that only
100,000 iterations reliably produced results that satisfy the definition of done for the scheduling algorithm (as outlined in the product backlog)

Here are the test results demonstrating that 100,000 iterations of the algorithm successfully produces results that satisfy the definition of done.
In this file you will see two tests showing the results of testing the scheduling algorithm on two different systems. The reason it was tested on two different
systems was to show that it could run in < 5 minutes on two different systems.

Probabalistic Scheduling Algorithm (Test 1, conducted on my system):

Tests:

1) Respect employee availability â€” no employee is scheduled during unavailable times.


2) Obey each employeeâ€™s maximum allowed hours â€” no employee is scheduled beyond their defined limit.


3) Produce at least one schedule with an acceptable number of unfilled shifts, defined as no more than 5 total hours of uncovered time (plausible to correct manually) across the entire schedule.


4) Return 5 distinct weekly schedules that serve as strong starting points for manual adjustment.


5) Schedule generation must complete within 5 minutes of the request.


Results:

1) Pass

2) Pass

3) Pass

4) Pass

5) Pass

Notes:

For test (1) - note that in this algorithm, employees are ONLY given shifts when they are available to work.

For test (2) - note that in this algorithm, employees will NEVER be assigned a shift that will cause them to have # hours assigned > maximum number of hours allowed to work

For test (3) - Note that the output below shows that only four 15 minute shifts (i.e. a total of an hour) 
is uncovered, which meets the definition of done and is very easy to correct manually.

For test (4) - Note that there are several schedules produced by the algorithm (which meets Definition of Done because Shawn would like 
multiple options to look at)

For test (5) - Note that the algorithm runs < 5 minutes, tested on multiple systems. 


Output:

EMP1: 
['****************************00000000000000000000111111111111111111110000111111111111************', '****************************11111111000000000000000000000000000000000000111111111111************', '****************************00000000111111111111111100000000000000000000111100001111************', '****************************00000000000000000000000000001111111111110000000000000000************', '****************************00000000000000001111000000000000000000000000000000000000************', '****************************11111111111111111111111111111111111111111111000000000000************', '****************************11111111000000000000000000000000111100001111111111111111************']
EMP2:
['****************************11111111111111111111000000000000000000000000111111111111************', '****************************11111111111111111111111100000000000000001111111100000000************', '****************************00001111111111111111000000001111111111110000000000001111************', '****************************00000000000011111111111111111111111111111111111111111111************', '****************************11111111111111111111111111111111111100000000000000000000************', '****************************11111111111111111111111111111111111100000000000000001111************', '****************************11111111111111111111000011110000000000000000000000000000************']
EMP3:
['****************************11111111111111111111111111111111111111111111111111111111************', '****************************11111111111111111111111111110000000000000000000000000000************', '****************************00000000000000000000111111111111111111111111111111111111************', '****************************11111111111111111111111111111111000000000000000000000000************', '****************************00000000111111111111111111111111111111110000111111111111************', '****************************00001111111111110000000000000000000000000000000000000000************', '****************************11110000000000000000000011111111111111111111111111111111************']
EMP4:
['****************************00001111111111111111111111111111111100000000000011111111************', '****************************00000000000000000000000000000000000011111111111111111111************', '****************************00000000000000000000000000000000000011111111111111111111************', '****************************11111111111111111111000000000000000011111111111111111111************', '****************************00000000111100000000000000000000000000000000111111111111************', '****************************00000000000000000000000000000000111111111111111100000000************', '****************************00001111111111111111111111110000000000000000000000000000************']
EMP5:
['****************************11111111111111110000000000000000000000000000000011111111************', '****************************11111111000011111111111111110000000000000000111111111111************', '****************************11111111111111111111111111111111000000000000000000001111************', '****************************11111111111100000000000000000000000000000000000011111111************', '****************************00000000000000000000111111111111000000000000000000000000************', '****************************00000000000011111111111111110000000000000000000011111111************', '****************************11111111000000000000111111111111111111111111111111111111************']
EMP6:
['****************************11111111111111111111111111111111111111111111111100000000************', '****************************00000000000011111111111111111111000000000000000000000000************', '****************************11111111111111111111111111111111111111110000000011110000************', '****************************11111111111111111111111100000000000000000000111111111111************', '****************************00000000000000000000000000000000000000000000000000000000************', '****************************00000000000000000000000011111111111111110000000011111111************', '****************************11111111111111111111000000000000000000000000111111111111************']
EMP7:
['****************************11111111111111111111000000000000000000000000000000000000************', '****************************11111111111111110000000000000000000000001111111111111111************', '****************************00000000000000000000000000000000000000000000000000001111************', '****************************11111111111111111111111111111111111111110000000000000000************', '****************************00000000000011111111111111111111111111110000000011110000************', '****************************11111111111111111111000000001111111100000000000011110000************', '****************************11111111111111110000000000000000000000000000000000000000************']
----------------------------------------
Value at each index represents the number of students AVAILABLE to work during the shift corresponding to that index:       
Day 1: 000000000000000000000000000022221111111111112222333333333333333344445555333322222222000000000000
Day 2: 000000000000000000000000000022222222444422223333333344446666777766664444222233333333000000000000
Day 3: 000000000000000000000000000055554444333333333333333344443333444433335555444444441111000000000000
Day 4: 000000000000000000000000000022222222222222222222333344443333444433335555444433333333000000000000
Day 5: 000000000000000000000000000066666666444444443333333333333333444455557777555544445555000000000000
Day 6: 000000000000000000000000000044443333333322223333444433333333222244445555666644444444000000000000
Day 7: 000000000000000000000000000011111111333333334444555533335555444455554444333333333333000000000000
----------------------------------------
----------------------------------------
We are on iteration: 10000: cost = 72, unfilled = 72, overstaffed = 4...
We are on iteration: 20000: cost = 100, unfilled = 100, overstaffed = 56...
We are on iteration: 30000: cost = 56, unfilled = 56, overstaffed = 52...
We are on iteration: 40000: cost = 68, unfilled = 68, overstaffed = 56...

âœ… Top 3 Schedules by Cost:
1. Cost = 4
2. Cost = 4
3. Cost = 8
4. Cost = 8
5. Cost = 8
6. Cost = 8
7. Cost = 8
8. Cost = 8
9. Cost = 8
10. Cost = 8

--- Shift Coverage Breakdown (Indices 28â€“83) ---
Shifts with 0 people scheduled  : 4
Shifts with 1 person scheduled  : 192
Shifts with exactly 2 scheduled : 140
Shifts with 3+ people scheduled : 56
EMP2:
  Mon: 000000000000000000000000000000000000000000000000111111111111111111111111000000000000000000000000
  Tue: 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  Wed: 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  Thu: 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  Fri: 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  Sat: 000000000000000000000000000000000000000000000000000000000000000011111111111111110000000000000000
  Sun: 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
--------------------------------------------------
EMP6:
  Mon: 000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000000000
  Tue: 000000000000000000000000000000000000000000000000000000000000111111111111111111111111000000000000
  Wed: 000000000000000000000000000000000000000000000000000000000000000000000000000000001111000000000000
  Thu: 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  Fri: 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  Sat: 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  Sun: 000000000000000000000000000000000000000000000000111111111111111111111111000000000000000000000000
--------------------------------------------------
EMP1:
  Mon: 000000000000000000000000000011111111111111111111000000000000000000000000000000000000000000000000
  Tue: 000000000000000000000000000000000000111111111111111111111111111111111111000000000000000000000000
  Wed: 000000000000000000000000000000000000000000000000000011111111111111111111000000000000000000000000
  Thu: 000000000000000000000000000011111111111111111111111111110000000000000000000000000000000000000000
  Fri: 000000000000000000000000000000000000000000000000111111111111111111111111111111111111000000000000
  Sat: 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  Sun: 000000000000000000000000000000000000000000000000000000000000000011110000000000000000000000000000
--------------------------------------------------
EMP4:
  Mon: 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  Tue: 000000000000000000000000000011111111111111111111111111111111111100000000000000000000000000000000
  Wed: 000000000000000000000000000011111111111111111111111111111111111100000000000000000000000000000000
  Thu: 000000000000000000000000000000000000000000000000111111111111111100000000000000000000000000000000
  Fri: 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  Sat: 000000000000000000000000000011111111111111111111111111111111000000000000000000000000000000000000
  Sun: 000000000000000000000000000011110000000000000000000000000000000000000000000000000000000000000000
--------------------------------------------------
EMP3:
  Mon: 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  Tue: 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  Wed: 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  Thu: 000000000000000000000000000000000000000000000000000000000000111111111111111111111111000000000000
  Fri: 000000000000000000000000000011111111000000000000000000000000000000000000000000000000000000000000
  Sat: 000000000000000000000000000000000000000000001111111111111111111111111111111111111111000000000000
  Sun: 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
--------------------------------------------------
EMP5:
  Mon: 000000000000000000000000000000000000000000001111111111111111111111111111111100000000000000000000
  Tue: 000000000000000000000000000000000000111100000000000000000000000000000000000000000000000000000000
  Wed: 000000000000000000000000000000000000000000000000000000000000111111111111111111110000000000000000
  Thu: 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  Fri: 000000000000000000000000000011111111111111111111000000000000000000000000000000000000000000000000
  Sat: 000000000000000000000000000000000000000000000000000000001111111111111111111100000000000000000000
  Sun: 000000000000000000000000000000000000111111111111000000000000000000000000000000000000000000000000
--------------------------------------------------
EMP7:
  Mon: 000000000000000000000000000000000000000000000000111111111111111111111111111111111111000000000000
  Tue: 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  Wed: 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  Thu: 000000000000000000000000000000000000000000000000000000000000000000001111111111111111000000000000
  Fri: 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  Sat: 000000000000000000000000000000000000000000000000000000000000000011111111111100000000000000000000
  Sun: 000000000000000000000000000000000000000000001111111111111111111111111111111111111111000000000000
--------------------------------------------------

ðŸ”¢ Total number of scheduled shifts (in hours) across all employees and days: 163.0
----------------------------------------
Information about each employee's max_hours vs the hours they are scheduled to work
EMP1: max_hours = 40, scheduled_hours = 36.0
EMP2: max_hours = 40, scheduled_hours = 10.0
EMP3: max_hours = 20, scheduled_hours = 18.0
EMP4: max_hours = 40, scheduled_hours = 31.0
EMP5: max_hours = 40, scheduled_hours = 27.0
EMP6: max_hours = 20, scheduled_hours = 15.0
EMP7: max_hours = 40, scheduled_hours = 26.0
----------------------------------------
The following shifts are uncovered: [('day6', 32), ('day6', 33), ('day6', 34), ('day6', 35)]

__________________________________________________________________________________________________________________________

SECOND TEST: ON Yan's System
EMP1: 
['****************************11111111111111111111111111111111111100001111111111111111************', '****************************00000000000011111111111111111111111111111111111111111111************', '****************************00000000000000000000000000000000000000000000000000000000************', '****************************11111111000000000000000000001111111100001111111111110000************', '****************************11111111111111111111000000000000000011111111111100000000************', '****************************00000000000000000000111111111111000000000000111111111111************', '****************************00000000000000000000000000000000000000000000000000000000************']
EMP2: 
['****************************00000000000011111111111111111111111111111111111111111111************', '****************************11111111000000000000000000000000000000000000000011111111************', '****************************11111111111111111111000000000000000000000000000000000000************', '****************************00000000000000000000000000000000000000000000000000001111************', '****************************00000000000000000000000000000000000000001111111111111111************', '****************************00000000111111111111111111111111111111111111111100000000************', '****************************11111111111111111111111100000000000000000000000000000000************']
EMP3: 
['****************************00000000000000000000000000000000000000000000111111111111************', '****************************00000000000000001111111111111111111111111111000000000000************', '****************************00001111111100000000000011111111111111110000111111110000************', '****************************00000000000000000000111111111111111111110000000000000000************', '****************************11111111111111111111111111111111111111111111111111111111************', '****************************00001111000000000000000000001111111111111111000000000000************', '****************************00000000111111111111111111111111111100000000000000000000************']
EMP4:
['****************************00000000000000001111111111111111111111110000000000000000************', '****************************11111111111111111111000000000000000000000000000000000000************', '****************************00000000000000000000000000001111111111111111111111110000************', '****************************00000000000000000000000000000000000000000000000000000000************', '****************************11111111111111111111111111110000000000000000000000000000************', '****************************00001111111111111111111111111111111111111111111111110000************', '****************************11111111111111110000000000000000000000000000000011110000************']
EMP5:
['****************************00000000111111110000000011111111111111111111000000000000************', '****************************00000000000000000000000000000000000000000000000000000000************', '****************************00001111111111111111111111111111111100000000000000001111************', '****************************00000000000000000000111111111111111111111111111111111111************', '****************************11111111000000000000000000000000000000000000000000000000************', '****************************11111111111111111111111100000000000000001111111111111111************', '****************************11111111111111111111111111110000000000000000000011111111************']
EMP6:
['****************************11111111111111111111111111111111111111110000000000000000************', '****************************11110000000000000000000000000000000000000000000000000000************', '****************************00000000000000000000000000000000000000000000000000001111************', '****************************00000000000000000000000011111111111111111111000000000000************', '****************************00000000000011111111111111111111111111111111111111110000************', '****************************00000000000000000000000000000000000000001111111111110000************', '****************************11111111000000000000000000000000111111111111111111111111************']
EMP7:
['****************************00000000000000000000000000000000000000000000000000001111************', '****************************00000000000011111111111111111111111111111111111111110000************', '****************************11111111111100001111111111111111111111111111111111111111************', '****************************11111111111111111111111111111111000000000000000000001111************', '****************************11111111000000000000111111110000000000001111111111111111************', '****************************11110000000011111111111100000000000000000000000000000000************', '****************************11111111111111111111111111111111000000001111111111111111************']
----------------------------------------
Value at each index represents the number of students AVAILABLE to work during the shift corresponding to that index:       
Day 1: 000000000000000000000000000055555555444433333333333322222222222233334444444444443333000000000000
Day 2: 000000000000000000000000000044445555666644443333444444444444444444444444555544445555000000000000
Day 3: 000000000000000000000000000055553333333355554444555544443333333344445555444444444444000000000000
Day 4: 000000000000000000000000000055555555666666666666444433332222333344444444555555554444000000000000
Day 5: 000000000000000000000000000022222222444433333333333333335555555544442222222233334444000000000000
Day 6: 000000000000000000000000000055554444444433333333222244443333444444442222222233335555000000000000
Day 7: 000000000000000000000000000022222222222222223333333344445555555566665555555533334444000000000000
----------------------------------------
----------------------------------------
We are on iteration: 10000: cost = 52, unfilled = 52, overstaffed = 52...
We are on iteration: 20000: cost = 116, unfilled = 116, overstaffed = 36...
We are on iteration: 30000: cost = 124, unfilled = 124, overstaffed = 36...
We are on iteration: 40000: cost = 28, unfilled = 28, overstaffed = 20...
We are on iteration: 50000: cost = 140, unfilled = 140, overstaffed = 52...
We are on iteration: 60000: cost = 68, unfilled = 68, overstaffed = 40...
We are on iteration: 70000: cost = 88, unfilled = 88, overstaffed = 32...
We are on iteration: 80000: cost = 60, unfilled = 60, overstaffed = 56...
We are on iteration: 90000: cost = 112, unfilled = 112, overstaffed = 44...

âœ… Top 3 Schedules by Cost:
1. Cost = 0
2. Cost = 0
3. Cost = 0
4. Cost = 0
5. Cost = 0
6. Cost = 0
7. Cost = 0
8. Cost = 0
9. Cost = 0
10. Cost = 0

--- Shift Coverage Breakdown (Indices 28â€“83) ---
Shifts with 0 people scheduled  : 0
Shifts with 1 person scheduled  : 176
Shifts with exactly 2 scheduled : 168
Shifts with 3+ people scheduled : 48
EMP3:
  Mon: 000000000000000000000000000011111111111111111111111111111111111111111111000000000000000000000000
  Tue: 000000000000000000000000000000000000000000000000000000000000000000000000111111111111000000000000
  Wed: 000000000000000000000000000000000000000000000000000000000000000000000000000000001111000000000000
  Thu: 000000000000000000000000000000000000000000000000000000000000000000001111111111111111000000000000
  Fri: 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  Sat: 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  Sun: 000000000000000000000000000011111111000000000000000000000000000000000000000000000000000000000000
--------------------------------------------------
EMP4:
  Mon: 000000000000000000000000000000000000000000000000000000000000000000001111111111111111000000000000
  Tue: 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  Wed: 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  Thu: 000000000000000000000000000011111111111111111111111111111111111111111111111111111111000000000000
  Fri: 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  Sat: 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  Sun: 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
--------------------------------------------------
EMP5:
  Mon: 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  Tue: 000000000000000000000000000011111111111111111111111111111111111111111111111111111111000000000000
  Wed: 000000000000000000000000000000000000000000000000000000000000000011111111111111110000000000000000
  Thu: 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  Fri: 000000000000000000000000000000000000111111111111111111111111111111111111111111111111000000000000
  Sat: 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  Sun: 000000000000000000000000000000000000000000000000000000001111111111111111111100000000000000000000
--------------------------------------------------
EMP6:
  Mon: 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  Tue: 000000000000000000000000000000001111111111111111111111111111111111111111111111111111000000000000
  Wed: 000000000000000000000000000011111111111111111111111111111111111111111111111111110000000000000000
  Thu: 000000000000000000000000000000000000000000000000000000000000000000000000111111111111000000000000
  Fri: 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  Sat: 000000000000000000000000000011111111111111111111111111111111111111110000000000000000000000000000
  Sun: 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
--------------------------------------------------
EMP1:
  Mon: 000000000000000000000000000000000000000000000000000000000000000011110000000000000000000000000000
  Tue: 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  Wed: 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  Thu: 000000000000000000000000000000000000111111111111111111110000000000000000000000000000000000000000
  Fri: 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  Sat: 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  Sun: 000000000000000000000000000011111111111111111111111111111111111111111111111111111111000000000000
--------------------------------------------------
EMP7:
  Mon: 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  Tue: 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  Wed: 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  Thu: 000000000000000000000000000000000000000000000000000000000000111111111111111111110000000000000000
  Fri: 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  Sat: 000000000000000000000000000000000000000000000000000011111111111111111111111111111111000000000000
  Sun: 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
--------------------------------------------------
EMP2:
  Mon: 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  Tue: 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  Wed: 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  Thu: 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  Fri: 000000000000000000000000000011111111111111111111111111111111111111110000000000000000000000000000
  Sat: 000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000000000
  Sun: 000000000000000000000000000000000000000000000000000011111111111111111111111111111111000000000000
--------------------------------------------------

ðŸ”¢ Total number of scheduled shifts (in hours) across all employees and days: 166.0
----------------------------------------
Information about each employee's max_hours vs the hours they are scheduled to work
EMP1: max_hours = 20, scheduled_hours = 20.0
EMP2: max_hours = 20, scheduled_hours = 20.0
EMP3: max_hours = 40, scheduled_hours = 21.0
EMP4: max_hours = 20, scheduled_hours = 18.0
EMP5: max_hours = 40, scheduled_hours = 35.0
EMP6: max_hours = 40, scheduled_hours = 39.0
EMP7: max_hours = 40, scheduled_hours = 13.0
----------------------------------------
The following shifts are uncovered: []

Test Results:

Tests:

1) Respect employee availability â€” no employee is scheduled during unavailable times.


2) Obey each employeeâ€™s maximum allowed hours â€” no employee is scheduled beyond their defined limit.


3) Produce at least one schedule with an acceptable number of unfilled shifts, defined as no more than 5 total hours of uncovered time (plausible to correct manually) across the entire schedule.


4) Return 5 distinct weekly schedules that serve as strong starting points for manual adjustment.


5) Schedule generation must complete within 5 minutes of the request.


Results:

1) Pass

2) Pass

3) Pass

4) Pass

5) Pass

Notes: The test shows that a schedule was produced with exactly 0 unfilled shifts (thus satisfies definition of doneness criteria 3). It was also shown in this test that the algorithm runs in < 5 minutes on Yan's system (Thus it has been shown that the algorithm runs in < 5 minutes on multiple systems).
"""
